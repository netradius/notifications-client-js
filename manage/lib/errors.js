"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseError = exports.FetchError = exports.InitError = exports.AuthorizationError = exports.ArgumentError = void 0;
class NotificationMessageError {
    constructor(message, name, options) {
        this.name = name;
        this.message = message;
        this.stack = (new Error(message)).stack;
        this.cause = options?.cause;
    }
}
Object.setPrototypeOf(NotificationMessageError, Object.create(Error.prototype));
class ArgumentError extends NotificationMessageError {
    constructor(message, options) {
        super(message, "ArgumentError", options);
    }
}
exports.ArgumentError = ArgumentError;
class AuthorizationError extends NotificationMessageError {
    constructor(message, options) {
        super(message, "AuthorizationError", options);
    }
}
exports.AuthorizationError = AuthorizationError;
class InitError extends NotificationMessageError {
    constructor(message, options) {
        super(message, "InitError", options);
    }
}
exports.InitError = InitError;
class FetchError extends NotificationMessageError {
    constructor(message, options) {
        super(message, "FetchError", options);
    }
}
exports.FetchError = FetchError;
class ResponseError extends NotificationMessageError {
    constructor(message, options) {
        super(message, "ResponseError", options);
    }
}
exports.ResponseError = ResponseError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFPQSxNQUFNLHdCQUF3QjtJQU03QixZQUFZLE9BQWMsRUFBRSxJQUFXLEVBQUUsT0FBOEI7UUFDdEUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxFQUFFLEtBQUssQ0FBQztJQUM3QixDQUFDO0NBQ0Q7QUFFRCxNQUFNLENBQUMsY0FBYyxDQUFDLHdCQUF3QixFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFFaEYsTUFBYSxhQUFjLFNBQVEsd0JBQXdCO0lBQzFELFlBQVksT0FBYyxFQUFFLE9BQXFCO1FBQ2hELEtBQUssQ0FBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzFDLENBQUM7Q0FDRDtBQUpELHNDQUlDO0FBRUQsTUFBYSxrQkFBbUIsU0FBUSx3QkFBd0I7SUFDL0QsWUFBWSxPQUFjLEVBQUUsT0FBcUI7UUFDaEQsS0FBSyxDQUFDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBQ0Q7QUFKRCxnREFJQztBQUVELE1BQWEsU0FBVSxTQUFRLHdCQUF3QjtJQUN0RCxZQUFZLE9BQWMsRUFBRSxPQUFxQjtRQUNoRCxLQUFLLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0Q7QUFKRCw4QkFJQztBQUVELE1BQWEsVUFBVyxTQUFRLHdCQUF3QjtJQUN2RCxZQUFZLE9BQWMsRUFBRSxPQUFxQjtRQUNoRCxLQUFLLENBQUMsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Q7QUFKRCxnQ0FJQztBQUVELE1BQWEsYUFBYyxTQUFRLHdCQUF3QjtJQUMxRCxZQUFZLE9BQWMsRUFBRSxPQUFxQjtRQUNoRCxLQUFLLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDO0NBQ0Q7QUFKRCxzQ0FJQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRXJyb3JPcHRpb25zIHsgY2F1c2U6IGFueSB9XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vd3d3LmJlbm5hZGVsLmNvbS9ibG9nLzMyMjYtZXhwZXJpbWVudGluZy13aXRoLWVycm9yLXN1Yi1jbGFzc2luZy11c2luZy1lczUtYW5kLXR5cGVzY3JpcHQtMi0xLTUuaHRtXG5cbmludGVyZmFjZSBOb3RpZmljYXRpb25NZXNzYWdlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG5cbmNsYXNzIE5vdGlmaWNhdGlvbk1lc3NhZ2VFcnJvciB7XG5cdHB1YmxpYyBuYW1lOiBzdHJpbmc7XG5cdHB1YmxpYyBtZXNzYWdlOiBzdHJpbmc7XG5cdHB1YmxpYyBzdGFjaz86IHN0cmluZztcblx0cHVibGljIGNhdXNlOmFueXx1bmRlZmluZWQ7XG5cblx0Y29uc3RydWN0b3IobWVzc2FnZTpzdHJpbmcsIG5hbWU6c3RyaW5nLCBvcHRpb25zOkVycm9yT3B0aW9uc3x1bmRlZmluZWQpIHtcblx0XHR0aGlzLm5hbWUgPSBuYW1lO1xuXHRcdHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG5cdFx0dGhpcy5zdGFjayA9IChuZXcgRXJyb3IobWVzc2FnZSkpLnN0YWNrO1xuXHRcdHRoaXMuY2F1c2UgPSBvcHRpb25zPy5jYXVzZTtcblx0fVxufVxuXG5PYmplY3Quc2V0UHJvdG90eXBlT2YoTm90aWZpY2F0aW9uTWVzc2FnZUVycm9yLCBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSkpO1xuXG5leHBvcnQgY2xhc3MgQXJndW1lbnRFcnJvciBleHRlbmRzIE5vdGlmaWNhdGlvbk1lc3NhZ2VFcnJvciB7XG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2U6c3RyaW5nLCBvcHRpb25zPzpFcnJvck9wdGlvbnMpIHtcblx0XHRzdXBlcihtZXNzYWdlLCBcIkFyZ3VtZW50RXJyb3JcIiwgb3B0aW9ucyk7XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25FcnJvciBleHRlbmRzIE5vdGlmaWNhdGlvbk1lc3NhZ2VFcnJvciB7XG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2U6c3RyaW5nLCBvcHRpb25zPzpFcnJvck9wdGlvbnMpIHtcblx0XHRzdXBlcihtZXNzYWdlLCBcIkF1dGhvcml6YXRpb25FcnJvclwiLCBvcHRpb25zKTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgSW5pdEVycm9yIGV4dGVuZHMgTm90aWZpY2F0aW9uTWVzc2FnZUVycm9yIHtcblx0Y29uc3RydWN0b3IobWVzc2FnZTpzdHJpbmcsIG9wdGlvbnM/OkVycm9yT3B0aW9ucykge1xuXHRcdHN1cGVyKG1lc3NhZ2UsIFwiSW5pdEVycm9yXCIsIG9wdGlvbnMpO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBGZXRjaEVycm9yIGV4dGVuZHMgTm90aWZpY2F0aW9uTWVzc2FnZUVycm9yIHtcblx0Y29uc3RydWN0b3IobWVzc2FnZTpzdHJpbmcsIG9wdGlvbnM/OkVycm9yT3B0aW9ucykge1xuXHRcdHN1cGVyKG1lc3NhZ2UsIFwiRmV0Y2hFcnJvclwiLCBvcHRpb25zKTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2VFcnJvciBleHRlbmRzIE5vdGlmaWNhdGlvbk1lc3NhZ2VFcnJvciB7XG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2U6c3RyaW5nLCBvcHRpb25zPzpFcnJvck9wdGlvbnMpIHtcblx0XHRzdXBlcihtZXNzYWdlLCBcIlJlc3BvbnNlRXJyb3JcIiwgb3B0aW9ucyk7XG5cdH1cbn1cbiJdfQ==