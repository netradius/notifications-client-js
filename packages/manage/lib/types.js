"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockReasonType = exports.AppKeyType = exports.AppKeyStatus = exports.ServiceProvider = exports.SenderStatus = exports.TemplateStage = exports.TemplateStatus = exports.CustomerStatus = exports.MessageStatus = exports.MessageType = void 0;
var MessageType;
(function (MessageType) {
    MessageType["Email"] = "email";
    MessageType["Sms"] = "sms";
})(MessageType = exports.MessageType || (exports.MessageType = {}));
var MessageStatus;
(function (MessageStatus) {
    MessageStatus["Pending"] = "pending";
    MessageStatus["Success"] = "success";
    MessageStatus["Failure"] = "failure";
})(MessageStatus = exports.MessageStatus || (exports.MessageStatus = {}));
var CustomerStatus;
(function (CustomerStatus) {
    CustomerStatus["Active"] = "active";
    CustomerStatus["Inactive"] = "inactive";
})(CustomerStatus = exports.CustomerStatus || (exports.CustomerStatus = {}));
var TemplateStatus;
(function (TemplateStatus) {
    TemplateStatus["Active"] = "active";
    TemplateStatus["Inactive"] = "inactive";
})(TemplateStatus = exports.TemplateStatus || (exports.TemplateStatus = {}));
var TemplateStage;
(function (TemplateStage) {
    TemplateStage["Published"] = "PUBLISHED";
    TemplateStage["Draft"] = "DRAFT";
})(TemplateStage = exports.TemplateStage || (exports.TemplateStage = {}));
var SenderStatus;
(function (SenderStatus) {
    SenderStatus["Active"] = "active";
    SenderStatus["Inactive"] = "inactive";
})(SenderStatus = exports.SenderStatus || (exports.SenderStatus = {}));
var ServiceProvider;
(function (ServiceProvider) {
    ServiceProvider["Twilio"] = "twilio";
    ServiceProvider["SendGrid"] = "sendgrid";
    ServiceProvider["EmailIntegrationTest"] = "email-integration-test";
    ServiceProvider["SmsIntegrationTest"] = "sms-integration-test";
})(ServiceProvider = exports.ServiceProvider || (exports.ServiceProvider = {}));
var AppKeyStatus;
(function (AppKeyStatus) {
    AppKeyStatus["Active"] = "active";
    AppKeyStatus["Inactive"] = "inactive";
})(AppKeyStatus = exports.AppKeyStatus || (exports.AppKeyStatus = {}));
var AppKeyType;
(function (AppKeyType) {
    AppKeyType["Messaging"] = "messaging";
    AppKeyType["Webhook"] = "webhook";
    AppKeyType["Management"] = "management";
    AppKeyType["Admin"] = "admin";
    AppKeyType["MessagingTest"] = "messaging-test";
})(AppKeyType = exports.AppKeyType || (exports.AppKeyType = {}));
var BlockReasonType;
(function (BlockReasonType) {
    BlockReasonType["Spam"] = "spam";
    BlockReasonType["Bounce"] = "bounce";
    BlockReasonType["Blocked"] = "blocked";
    BlockReasonType["OptOut"] = "optout";
    BlockReasonType["Other"] = "other";
    BlockReasonType["Manual"] = "manual";
})(BlockReasonType = exports.BlockReasonType || (exports.BlockReasonType = {}));
//# sourceMappingURL=data:application/json;base64,